version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: workly-postgres
    environment:
      POSTGRES_DB: workly
      POSTGRES_USER: workly
      POSTGRES_PASSWORD: workly123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - workly-network

  # Redis (Socket.io Adapter용)
  redis:
    image: redis:7-alpine
    container_name: workly-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - workly-network

  # Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: workly-backend
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=workly
      - DATABASE_USER=workly
      - DATABASE_PASSWORD=workly123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - workly-network
    command: npm run start:dev

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: workly-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - workly-network
    command: npm run dev

  # MinIO (S3 호환 로컬 스토리지 - 개발용)
  minio:
    image: minio/minio:latest
    container_name: workly-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - workly-network
    command: server /data --console-address ":9001"

  # Nginx (리버스 프록시)
  nginx:
    image: nginx:alpine
    container_name: workly-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
    depends_on:
      - frontend
      - backend
    networks:
      - workly-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  workly-network:
    driver: bridge